# AutoRedirect Configuration Examples
# Supports hash comment functionality - lines starting with # will be ignored

# ===== Exact Match Mode (Recommended, Safest) =====
# Use = prefix to match only identical URLs, avoiding accidental triggers
# Suitable for specific domains or complete URL redirections
=localhost:3000####https://www.example.com

# ===== Prefix Match Mode (Recommended Format) =====
# Use standard domain format to avoid being treated as search terms by browsers
# Recommended to use .localhost, .local or localhost with port
^dev.localhost####https://development.example.com
^api.localhost####https://api.example.com
^localhost:8####https://development.example.com
staging.internal*####https://staging.example.com

# ===== URL Template Replacement Feature =====
# Use * wildcard and {1}, {2}, {3} placeholders for URL rewriting
# Basic domain replacement: transfer all paths from old-domain.com to new-domain.com
old-domain.com/*####new-domain.com/{1}
# Complex path rewriting: reorganize URL structure
example.com/*/page/*####https://newsite.com/{1}/newpage/{2}
# Reuse placeholders: same capture group can be used multiple times
user.com/profile/*####newuser.com/{1}/dashboard/{1}

# ===== Smart URL Extraction Feature =====
# Empty target URL for automatic URL parameter extraction and decoding
# Automatically skip intermediate redirect pages, go directly to target website
link.zhihu.com/?target=####
weixin110.qq.com/cgi-bin/readtemplate?t=safety/index&url=####

# ===== Exact Local File Redirection (Highest Priority) =====
# Complete file:// protocol path matching (most precise, highest priority)
=file:///Downloads/full/test_local.html####https://www.example.com/full/

# ===== Cross-User Local File Redirection =====
# Cross-user universal local development environment mapping (exact match, avoid conflicts with other rules)
=file:///Users/*/dev/*/pickone/*.html####https://production.example.com/{3}

# ===== Specific Project Local File Redirection =====
# ChromeStore project local file redirection (more specific path matching)
*ChromeStore/localfile/*.html$####https://www.example.com/{2}/

# ===== Universal Local File Redirection =====
# Basic file redirection (suffix match, for other projects)
*demo_local.html$####https://www.example.com/demo/

# ===== Special Scenario Configuration (Use with Caution) =====
# The following rules are only for special scenarios, not recommended for direct address bar input
# Suitable for: bookmarks, programmatic calls, enterprise intranet, etc.

# Simple string matching (for programmatic access only)
# Note: Direct input in address bar will be treated as search terms
^danger_dev####https://development.example.com
danger_api*####https://api.example.com
^danger_docs####https://documentation.example.com

# ===== Multiple Result Selection Test =====
# When a URL matches multiple rules, a selection page will be displayed for user choice
multi####https://www.google.com
multi####https://www.bing.com
multi####https://www.yahoo.com

# ===== Suffix Match Mode =====
# Use * prefix or $ suffix to match URLs ending with specified string
*.localprod####https://production.example.com
*config.json$####https://config.example.com

# ===== Rule Explanation =====
# 1. Lines starting with # are comment lines and will be ignored
# 2. Empty lines are also ignored
# 3. Rule format: Original URL Pattern####Target URL Pattern
# 4. Empty target URL (nothing after ####) is used for universal URL extraction
# 5. Matching pattern explanation:
#    - Exact match: =pattern (complete match, safest, recommended priority)
#    - Prefix match: ^pattern or pattern* (match beginning, recommend standard domain format)
#    - Suffix match: *pattern or pattern$ (match ending)
#    - Contains match: pattern (default mode, use with caution)
# 6. URL template replacement feature:
#    - Use * wildcard to match any characters
#    - Use {1}, {2}, {3} placeholders to reference matched content
#    - Support placeholder reuse and rearrangement
# 7. Best practice recommendations:
#    - Prioritize exact match (= prefix) to avoid accidental redirections
#    - Use standard domain format for prefix matching (like .localhost, .local)
#    - Simple string matching only for special scenarios (bookmarks, programmatic calls, etc.)
#    - Rules are matched from top to bottom, exact matches should be placed first
#    - Use more specific path matching to avoid rule conflicts
# 8. Address bar input limitations:
#    - Simple strings (like dev, api) will be treated as search terms when directly input in address bar
#    - Recommend using complete domain format or access through bookmarks/programmatic calls
# 9. Local file redirection explanation:
#    - Support file:// protocol local files
#    - Can use wildcards for batch file processing
#    - Suitable for local development to production environment mapping
#    - Support directory structure preserving redirection
#    - Rules sorted by priority: exact match > cross-user match > specific project > universal match 