# AutoRedirect 配置示例
# 支持井号注释功能 - 以#开头的行会被忽略

# ===== 精确匹配模式（推荐，最安全） =====
# 使用 = 前缀，只匹配完全相同的URL，避免误触发
# 适用于特定域名或完整URL的重定向
=localhost:3000####https://www.example.com

# ===== 开头匹配模式（推荐格式） =====
# 使用标准域名格式，避免被浏览器当作搜索词
# 推荐使用 .localhost、.local 或带端口的localhost
^dev.localhost####https://development.example.com
^api.localhost####https://api.example.com
^localhost:8####https://development.example.com
staging.internal*####https://staging.example.com

# ===== URL模板替换功能 =====
# 使用 * 通配符和 {1}, {2}, {3} 等占位符进行URL重写
# 基础域名替换：将old-domain.com的所有路径转移到new-domain.com
old-domain.com/*####new-domain.com/{1}
# 复杂路径重写：重新组织URL结构
example.com/*/page/*####https://newsite.com/{1}/newpage/{2}
# 重复使用占位符：同一个捕获组可以多次使用
user.com/profile/*####newuser.com/{1}/dashboard/{1}

# ===== 智能URL提取功能 =====
# 目标URL为空，用于自动提取和解码URL参数
# 自动跳过中间跳转页面，直达目标网站
link.zhihu.com/?target=####
weixin110.qq.com/cgi-bin/readtemplate?t=safety/index&url=####

# ===== 精确本地文件重定向（最高优先级） =====
# 完整file://协议路径匹配（最精确，优先级最高）
=file:///Downloads/full/test_local.html####https://www.example.com/full/

# ===== 跨用户本地文件重定向 =====
# 跨用户通用的本地开发环境映射（精确匹配，避免与其他规则冲突）
=file:///Users/*/dev/*/pickone/*.html####https://production.example.com/{3}

# ===== 特定项目本地文件重定向 =====
# ChromeStore项目的本地文件重定向（更具体的路径匹配）
*ChromeStore/localfile/*.html$####https://www.example.com/{2}/

# ===== 通用本地文件重定向 =====
# 基础文件重定向（结尾匹配，用于其他项目）
*demo_local.html$####https://www.example.com/demo/

# ===== 特殊场景配置（谨慎使用） =====
# 以下规则仅适用于特殊场景，在隔离环境中相对安全
# 适用于：企业内网、自定义协议等

# 企业内网环境（统一命名规范）
internal-*####https://gateway.company.com/redirect?to={1}
corp-hr####https://hr.company.com
corp-finance####https://finance.company.com

# 自定义应用协议（协议隔离）
myapp://####https://web.myapp.com/
electron-app://####https://app.example.com/

# ===== 多结果选择测试 =====
# 当一个URL匹配多个规则时，会显示选择页面让用户选择
# 使用安全的精确匹配和开头匹配格式
=search.local####https://www.google.com
=search.local####https://www.bing.com
=search.local####https://www.yahoo.com
# 或者使用开头匹配的安全格式：
^search.localhost####https://www.google.com
^search.localhost####https://www.bing.com
^search.localhost####https://www.yahoo.com

# ===== 结尾匹配模式 =====
# 使用 * 前缀或 $ 后缀，匹配以指定字符串结尾的URL
*.localprod####https://production.example.com
*config.json$####https://config.example.com

# ===== 规则说明 =====
# 1. 以#开头的行为注释行，会被忽略
# 2. 空行也会被忽略
# 3. 规则格式：原始URL模式####目标URL模式
# 4. 空目标URL（####后面为空）用于通用URL提取功能
# 5. 匹配模式说明：
#    - 精确匹配：=pattern（完全匹配，最安全，推荐优先使用）
#    - 开头匹配：^pattern 或 pattern*（匹配开头，推荐使用标准域名格式）
#    - 结尾匹配：*pattern 或 pattern$（匹配结尾）
#    - 包含匹配：pattern（默认模式，谨慎使用）
# 6. URL模板替换功能：
#    - 使用 * 通配符匹配任意字符
#    - 使用 {1}, {2}, {3} 等占位符引用匹配的内容
#    - 支持占位符重复使用和重新排列
# 7. 最佳实践建议：
#    - 优先使用精确匹配（=前缀），避免意外重定向
#    - 开头匹配使用标准域名格式（如 .localhost、.local）
#    - 简单字符串匹配仅用于特殊场景（书签、程序调用等）
#    - 规则按从上到下的顺序匹配，精确匹配应放在前面
#    - 使用更具体的路径匹配避免规则冲突
#    - ⚠️ 避免简单字符串匹配的误触发风险：
#      * 错误：search#### 会匹配 research.com/search-results
#      * 错误：api#### 会匹配 example.com/rapid-api/docs  
#      * 正确：corp-hr#### 或 internal-hr#### （企业内网环境）
#      * 正确：myapp://#### （自定义协议）
# 8. 地址栏输入限制：
#    - 简单字符串（如 dev、api）在地址栏直接输入会被当作搜索词
#    - 推荐使用完整域名格式或通过书签、程序调用访问
# 9. 本地文件重定向说明：
#    - 支持 file:// 协议的本地文件
#    - 可以使用通配符批量处理文件
#    - 适用于本地开发到生产环境的映射
#    - 支持保持目录结构的重定向
#    - 规则按优先级排序：精确匹配 > 跨用户匹配 > 特定项目 > 通用匹配 